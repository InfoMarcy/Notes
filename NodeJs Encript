///=============================== function 1 ===================
const shell = require("shelljs");
const getRuta = require("../middleware/getRuta");

//archivo cifrado que se va a generear a partir del archivo original
var Archivo_Cifrado = getRuta.getRuta("db", "usuarios.json");

//archivo original en texto plano
var Archivo_Original = getRuta.getRuta("db", "ips.json");

module.exports = {
  //funcion para descifrar el archivo
  Decrypt_File: function() {
    return shell.exec(
      getRuta("middleware", "desencriptar.sh ") + Archivo_Cifrado
    );
  },

  Encrypt_File: function() {
    return shell.exec(
      getRuta("middleware", "encriptar.sh ") + Archivo_Original
    );
  }
};

///=============================== function 2 ===================
const path = require("path");

module.exports = {
  // metodo para obtener las rutas de los archivos
  getRuta: function(carpeta, ruta) {
    const p = path.join(
      path.dirname(process.mainModule.filename),
      carpeta,
      ruta
    );
    return p;
  }
};

///=============================== archivo  desencriptar.sh===================
#!/bin/bash
openssl enc -aes-256-cbc -in $1 -d -a -k banco2018


///=============================== archivo  encriptar.sh===================
#!/bin/bash
openssl enc -aes-256-cbc -in $1 -e -a -k banco2018

///=============================== archivo  desencriptar.sh para que escriba en un segundo archivo===================
#!/bin/bash
openssl enc -aes-256-cbc -in $1 -out $2 -d -a -k banco2018

///=============================== archivo  encriptar.sh para que escriba en un segundo archivo===================
#!/bin/bash
openssl enc -aes-256-cbc -in $1 -out $2 -e -a -k banco2018


#Comando para encriptar en console
1. #!/bin/bash
openssl enc -aes-256-cbc -in $1 -out $2 -e -a -k password


#!/bin/bash
openssl enc -aes-256-cbc -in usuariosPlano.json -out usuariosEncriptados.json -e -a -k banco2018


#Comando para desencriptar en console
2

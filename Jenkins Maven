On Configure
#Build Triggers
1. check => Build whenever a snapshot dependency is build

# we specify the frecuency that we want jenkings to check the source code
#if there is any changes in the code to generate a new build
2. check => Poll SCM => Git Polling Log is used to see if jenkings detected any changes on the code
Schedule => * * * * *
1* => minutes (0 -59)
2* => hours (0 -23)
3* => day of the month (1 -31)
4* => month (1 -12)
5* => day of the week (0 -6)

Connect to git using jenkins
#Source Code management
1. Select Git
2. Repositories => Repository URl => git url


#Build
1. Invoke top-level Maven targets
2. Select the maven version
3. Goals => clean  package


#after installing checkstyle plugin
3. Goals => clean  package checkstyle:checkstyle
4. on Post-build Actions select => Public Checkstyle analisis results


Flujo de trabajo de la integracion continua
1. on Post-build Actions select => Archive the artifacts
2. files to archive => **/*.war


Despliegue a entorno de pruebas
#instalar los plugins 1. copy artifacts y 2. deploy to container

1. create a new maven project para desplegar el artifactory
2. create a new freestyle project to deploy the app
   #On Build => Copy Artifact from another Project
   1. on Project name => <nombre del project para desplegar el artifactory>
   2. on Artifacts to copy => **/*.war
   
   #On Post Build Actions => Deploy war/ear to a container
   3. WAR/EAR files => **/*.war
   4. Container 
      1. Tomcat URL	 => http://localhost:8888/
      2. add tomcat credentials
      
#activar el trabajo deploy-to-staging
 1. go to project para desplegar el artifactory 
 2. configure => on Post-build Actions select => Build other projects => <nombre del project to deploy the app>


====================#Dockerfile file =====================

FROM achalise/alpine-java8:latest
VOLUME /tmp
ADD hr_app-0.0.1-SNAPSHOT.jar app.jar
RUN sh -c 'touch /app.jar'
ENV JAVA_OPTS=""
ENTRYPOINT [ "sh", "-c", "java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -Dspring.data.mongodb.host=$MONGO_URI \
-jar /app.jar" ]


====================#yaml file =====================
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo-service
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo
  name: mongo-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          hostPath:
                path: /data/storage/mongodb
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hr-core-app
spec:
  replicas: 1 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: hr-core-service
        version: v1
    spec:
      containers:
      - name: hr-core-service
        image: infomarcy/hr-client-app
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
            - name: MONGO_URI
              value: mongo-service
---
apiVersion: v1
kind: Service
metadata:
  name: hr-core-service
  labels:
    app: hr-core-service
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: http
      targetPort: 8080       #nodePort: 31001
  selector:
    app: hr-core-service
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hr-account-app
spec:
  replicas: 1 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: hr-account-service
        version: v1
    spec:
      containers:
      - name: hr-account-service
        image: infomarcy/hr-accounts
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9090
        env:
            - name: MONGO_URI
              value: mongo-service
---
apiVersion: v1
kind: Service
metadata:
  name: hr-account-service
  labels:
    app: hr-account-service
spec:
  type: NodePort
  ports:
    - port: 9090
      name: http
      targetPort: 9090
      nodePort: 31002
  selector:
    app: hr-account-service

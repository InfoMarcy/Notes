JEST
1. npm i jest --save-dev

#under package.json
 "scripts": {
     "test": "jest --watchAll --verbose"
  },

  
  # Run the Test
  2. npm test
  
const lib = require("../lib");

//test('Our first test', ()=> {
//throw new Error('something failed');
//});

describe("absolute", () => {
  it(" -should return a positive number if input is positive", () => {
    const result = lib.absolute(1);
    expect(result).toBe(1);
  });

  it(" -should return a positive number if input is negative", () => {
    const result = lib.absolute(-1);
    expect(result).toBe(1);
  });

  it(" -should return a 0 number if input is 0", () => {
    const result = lib.absolute(1);
    expect(result).toBe(1);
  });
});

describe("greet", () => {
  it("should return the greeting message", () => {
    const result = lib.greet("Marcy");
    expect(result).toMatch(/Marcy/);
    expect(result).toContain("Marcy");
  });
});

describe("getCurrencies", () => {
  it("should return supported currencies", () => {
    const result = lib.getCurrencies();

    //proper way
    expect(result).toContain("USD");

    //ideal way
    expect(result).toEqual(expect.arrayContaining(["EUR", "USD", "AUD"]));
  });
});

describe('getProducts', ()=>{
    it('should return the product with the given id', () => {
        const result = lib.getProduct(1);
      //  expect(result).toEqual({ id: 1, price: 10});
        expect(result).toMatchObject({ id: 1, price: 10});
        expect(result).toHaveProperty('id', 1);
    });
});


// Testing exceptions
describe('registerUser', ()=> {
    it('should throw if username is falsy', ()=> {
     //Null  undefined NaN '' 0 false
 const args = [null, undefined, NaN, '', 0, false];

 args.forEach(a => {
    expect( () => { lib.registerUser(a) }).toThrow();
 });
     
    });

    it('should return a user object if valid username is passed', ()=> {
        const result = lib.registerUser('Marcy');
        expect(result).toMatchObject({username: 'Marcy'});
        expect(result.id).toBeGreaterThan(0);
    })
})

// https://jestjs.io/

Execute the following command to determine if your Kubernetes cluster is running in an environment that supports external load balancers:
1. kubectl get svc istio-ingressgateway -n istio-system

Determining the ingress IP and ports when using an external load balancer
Set the ingress IP and ports:
1. export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

2. export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].port}')

3. export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].port}')

4. export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')

 ======================Create an Istio Gateway:============================
cat <<EOF | kubectl apply -f -
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: java-app-gateway
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "http.java-app.com"
EOF

 ======================End Create an Istio Gateway:============================
 
  ======================Configure routes for traffic entering via the Gateway: ============================
 
 cat <<EOF | kubectl apply -f -
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: java-app-route-traffic-ingress
spec:
  hosts:
  - "http.java-app.com"
  gateways:
  - java-app-gateway
  http:
  - match:
    - uri:
        prefix: /
    - uri:
        prefix: /create-accounts/
    route:
    - destination:
        port:
          number: 9090
        host: localhost
EOF
  ======================End Configure routes for traffic entering via the Gateway: ============================
ou have now created a virtual service configuration for the httpbin service containing two route rules that allow traffic for paths /status and /delay.
The gateways list specifies that only requests through your httpbin-gateway are allowed. All other external requests will be rejected with a 404 response.

Access the httpbin service using curl:
curl -I -HHost:http.java-app.com http://$INGRESS_HOST:$INGRESS_PORT/

$INGRESS_HOST:$INGRESS_PORT

Accessing ingress services using a browser

cat <<EOF | kubectl apply -f -
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: java-app-gateway
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: java-app-route-traffic-ingress
spec:
  hosts:
  - "*"
  gateways:
  - java-app-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: 9090
        host: localhost
EOF


kubectl describe  gateway java-app-gateway

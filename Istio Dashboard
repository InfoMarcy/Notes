#Distributed Tracing
Setup access to the Jaeger dashboard by using port-forwarding:
1. kubectl port-forward -n istio-system $(kubectl get pod -n istio-system -l app=jaeger -o jsonpath='{.items[0].metadata.name}') 16686:16686 &
2. http://localhost:16686.



#ServiceGraph
Set up a tunnel to ServiceGraph:
3. kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=servicegraph -o jsonpath='{.items[0].metadata.name}') 8088:8088 &
5. http://localhost:8088/dotviz

#Grafana
Set up a tunnel to Grafana:
6. kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=grafana -o jsonpath='{.items[0].metadata.name}') 3000:3000 &
7. http://localhost:3000/dashboard/db/istio-dashboard


#Prometheus
Prometheus is installed with Grafana. You can view Istio and application metrics using the console as follows:
8. kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=prometheus -o jsonpath='{.items[0].metadata.name}') 9090:9090 &
9. http://localhost:9090/graph

Envoy Dashboard
# Find the istio-ingresgateway pods that are tagged with the label “istio=ingressgateway”. 
6. kubectl get pod -n istio-system -l istio=ingressgateway -o name

#Istio configures Envoy to listen for the admin portion on port 15000
kubectl -n istio-system port-forward istio-ingressgateway-7f4dd7d699-dfdq8 15000

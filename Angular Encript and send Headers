import { Injectable } from '@angular/core';
import { HttpClient,  }    from '@angular/common/http';
import { Constants } from '../../domain/constants';
import * as CryptoJS from 'crypto-js'; 
import { tokenGetter } from '../../app.module';
import { HttpHeaders } from '@angular/common/http';

@Injectable({
  providedIn: 'root'
})
export class OauthService {

constructor(private http: HttpClient) { }
private oAuthToken;
private encPassword: string = 'secret';  
private decPassword:string = 'secret'; 

getToken () {
  return this.http.post(Constants.OBTENER_OAUTH_TOKEN, null)
};


eliminarCliente (id, token) {
   //Headers 
  const httpOptions = {
    headers: new HttpHeaders({
      'Authorization': this.Encrypt("Bearer " + token)
    })
  };

  var endpoint = Constants.IP_SERVER_API + Constants.PORT_SERVER_API + Constants.ELIMINAR_CLIENTE + '/'+id;
  console.log("Eliminar Cliente endpoint => ", endpoint);
  return this.http.delete(endpoint, httpOptions)
};


doLogin (numEmpleado, token) {
  // json to be cifrado
  let cifrar = {
    "usuario": numEmpleado
  };

    //Headers 
  const httpOptions = {
    headers: new HttpHeaders({
      'Authorization': this.Encrypt("Bearer " + token)
    })
  };

  // cifrar body
  let cifrado = this.Encrypt(JSON.stringify(cifrar));

  console.log("cifrado => ", cifrado);

 //endpoint
  var endpoint =  Constants.IP_SERVER_API + Constants.PORT_SERVER_API + Constants.VALIDA_ACCESO_LOGIN;

  // return this.http.post(endpoint,  { "datos": cifrado }, httpOptions );
  return this.http.post(endpoint,  {  "usuario": numEmpleado }, httpOptions );
};

// Encripta
Encrypt (req) {
   var ciphertext = CryptoJS.AES.encrypt(req, this.encPassword.trim()).toString(); 
   return ciphertext
 };

// Decripta
 Decrypt (req) {
   var ciphertext = CryptoJS.AES.decrypt(req, this.decPassword.trim()).toString(CryptoJS.enc.Utf8); 
   return ciphertext
 };


}



//============================== Clase para guardar los datos constantes ==================================//
export class Constants 
{ 
    public static get IP_SERVER_API() : string { return "https://10.51.58.230:"};
    public static get PORT_SERVER_API() : string { return "443"; };

    //lista de servicios a consumir
    public static get VALIDA_ACCESO_LOGIN() : string { return "/auth/v1/login" }
    public static get REGISTRO() : string { return "/auth/v1/registro" }

    //New Ones
    public static get ELIMINAR_CLIENTE() : string { return "/ambientes/v1/borra/usuario" }
}


